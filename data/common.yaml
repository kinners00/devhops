---
lookup_options:
  devhops::tags:
    merge: deep

devhops::create_master::instance_type: 't2.large'
devhops::create_linux_node::instance_type: 't2.micro'
devhops::create_windows_node::instance_type: 't2.small'
devhops::create_discovery::instance_type: 't2.small'
devhops::create_windc::instance_type: 't2.small'
devhops::create_wsus::instance_type: 't2.medium'
devhops::windows_domain::dn: 'DC=devhops,DC=local'
devhops::windows_domain::localadminpw: 'PuppetD3vh0ps!'
devhops::windows_domain::domainname: 'devhops.local'
devhops::windows_domain::domainnbname: 'DEVHOPS'
devhops::windows_domain::ntdspath: 'C:\\NTDS'
devhops::windows_domain::safemodepw: 'PuppetD3vh0ps!'
devhops::windows_domain::join_user: 'DEVHOPS\Administrator'
devhops::windows_domain::join_password: 'PuppetD3vh0ps!'

devhops::tags:
  description: 'DevHops Infrastructure'
  department: 'TSE'
  project: 'DevHops workshops'
  lifetime: 10w
  Schedule: '-21:00'
  
devhops::vpc: 'default'

devhops::create_linux_node::user_data: |
  #! /bin/bash
  echo "<%= $devhops::master_ip %> master.inf.puppet.vm master" >> /etc/hosts
  #hostname=$(curl http://169.254.169.254/latest/meta-data/public-hostname)
  curl -k https://master.inf.puppet.vm:8140/packages/current/install.bash | bash -s agent:certname="linhops-<%= $i %>"

# Adding Useful install packages here such as chocolately, npp++, 7zip and procexp tools for installation.
devhops::create_windows_node::user_data: |
  <powershell>
  $hosts = "$env:windir\System32\drivers\etc\hosts"
  "<%= $devhops::master_ip %> master.inf.puppet.vm master" | Add-Content -PassThru $hosts;
  "<%= $devhops::wsus_ip %> wsus.inf.puppet.vm wsus" | Add-Content -PassThru $hosts;
  [Net.ServicePointManager]::ServerCertificateValidationCallback = {$true}; 
  net user admin "Devops!" /add ;
  net localgroup Administrators admin /add ;
  wmic USERACCOUNT WHERE "Name='admin'" set PasswordExpires=FALSE ;
  net user Administrator "Devops!" ;
  wmic USERACCOUNT WHERE "Name='Administrator'" set PasswordExpires=FALSE ;
  Set-ExecutionPolicy Bypass -Scope Process -Force;
  iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'));
  choco install --yes notepadplusplus.install 7zip.install procexp ;
  $webClient = New-Object System.Net.WebClient; 
  $webClient.DownloadFile('https://master:8140/packages/current/install.ps1', 'install.ps1'); 
  .\install.ps1 main:certname="winhops-<%= $i %>" -PuppetServiceEnsure stopped -PuppetServiceEnable false
  winrm quickconfig -force
  </powershell>

devhops::create_linux_node::count: 2
devhops::create_windows_node::count: 2

devhops::create_discovery::user_data: |
  #! /bin/bash
  #hostname=$(curl http://169.254.169.254/latest/meta-data/public-hostname)
  yum install -y yum-utils device-mapper-persistent-data lvm2
  yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
  yum install -y docker-ce
  systemctl enable docker
  systemctl start docker
  curl -o ~/puppet-discovery https://storage.googleapis.com/chvwcgv0lwrpc2nvdmvyes1jbgkk/production/latest/linux-amd64/puppet-discovery
  chmod a+x ~/puppet-discovery
  ~/puppet-discovery demo

devhops::create_master::user_data: |
  #! /bin/bash
  sleep 120 # give time for startup
  cd /tmp
  git clone <%= $control_repo %> control-repo
  cd control-repo
  git remote add gogs git@localhost:puppet/control-repo.git
  git push gogs production
  <% $gogs_ssh_keys.each |$title| { -%>
  curl -u puppet:puppetlabs -X POST -H "Content-Type: application/json" -d \
  '{"title": "<%= $title %>", "key": "<%= $gogs_ssh_keys[$title] %>"}'
  <% } -%>

devhops::create_master::control_repo: https://github.com/puppetlabs-seteam/control-repo-devhops

devhops::create_windc::user_data: |
  <powershell>
  $hosts = "$env:windir\System32\drivers\etc\hosts"
  "<%= $devhops::master_ip %> master.inf.puppet.vm master" | Add-Content -PassThru $hosts
  "<%= $devhops::wsus_ip %> wsus.inf.puppet.vm wsus" | Add-Content -PassThru $hosts;
  [Net.ServicePointManager]::ServerCertificateValidationCallback = {$true}; 
  $webClient = New-Object System.Net.WebClient; 
  $webClient.DownloadFile('https://master:8140/packages/current/install.ps1', 'install.ps1'); 
  .\install.ps1 main:certname="windchops-1.inf.puppet.vm"
  winrm quickconfig -force
  </powershell>

devhops::create_wsus::user_data: |
  <powershell>
  $hosts = "$env:windir\System32\drivers\etc\hosts"
  "<%= $devhops::master_ip %> master.inf.puppet.vm master" | Add-Content -PassThru $hosts
  "<%= $devhops::wsus_ip %> wsus.inf.puppet.vm wsus" | Add-Content -PassThru $hosts;
  [Net.ServicePointManager]::ServerCertificateValidationCallback = {$true}; 
  net user admin "Devops!" /add ;
  net localgroup Administrators admin /add ;
  wmic USERACCOUNT WHERE "Name='admin'" set PasswordExpires=FALSE ;
  net user Administrator "Devops!" ;
  wmic USERACCOUNT WHERE "Name='Administrator'" set PasswordExpires=FALSE ;
  Set-ExecutionPolicy Bypass -Scope Process -Force;
  Install-WindowsFeature -Name UpdateServices -IncludeManagementTools;
  New-Item -Path C: -Name WSUS -ItemType Directory;
  & "C:\Program Files\Update Services\Tools\wsusutil.exe" postinstall CONTENT_DIR=C:\WSUS
  iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
  choco install --yes notepadplusplus.install 7zip.install procexp
  # Further WSUS Configuration
  $wsus = Get-WSUSServer;
  $wsusConfig = $wsus.GetConfiguration();
  # Set to download updates from Microsoft Updates
  Set-WsusServerSynchronization â€“SyncFromMU;
  # Set Update Languages to English and save configuration settings
  $wsusConfig.AllUpdateLanguagesEnabled = $false;
  $wsusConfig.SetEnabledUpdateLanguages("en");
  $wsusConfig.Save();
  # Get WSUS Subscription and perform initial synchronization to get latest categories
  $subscription = $wsus.GetSubscription();
  $subscription.StartSynchronizationForCategoryOnly();
  While ($subscription.GetSynchronizationStatus() -ne 'NotProcessing') { Write-Host "." -NoNewline; Start-Sleep -Seconds 5 ;};
  Write-Host "Sync is done.";
  # Configure the Platforms that we want WSUS to receive updates
  Get-WsusProduct | where-Object { $_.Product.Title -in ('Windows 10', 'Windows Server 2016','Windows Server 2012 R2') } | Set-WsusProduct;
  # Configure the Classifications
  Get-WsusClassification | Where-Object { $_.Classification.Title -in ('Update Rollups', 'Security Updates', 'Critical Updates', 'Service Packs', 'Updates') } | Set-WsusClassification;
  # Configure Synchronizations
  $subscription.SynchronizeAutomatically=$true;
  # Set synchronization scheduled for midnight each night
  $subscription.SynchronizeAutomaticallyTimeOfDay= (New-TimeSpan -Hours 0);
  $subscription.NumberOfSynchronizationsPerDay=1;
  $subscription.Save();
  # Kick off a synchronization
  $subscription.StartSynchronization();
  [Net.ServicePointManager]::ServerCertificateValidationCallback = {$true}; 
  $webClient = New-Object System.Net.WebClient; 
  $webClient.DownloadFile('https://master:8140/packages/current/install.ps1', 'install.ps1'); 
  .\install.ps1 main:certname="wsus.inf.puppet.vm"
  winrm quickconfig -force
  </powershell>

devhops::amis:
  us-west-2: # US/Canada
    pm: ami-6209801a
  eu-west-2: # London
    pm:        ami-036b19be76e42feb6 # tse-master-vmware-2018.1.0-v0.0.9.ova
    centos:    ami-ee6a718a # CentOS Linux 7 x86_64 HVM EBS
    windows:   ami-8bd232ec # Windows_Server-2016-English-Full-Base-2018.04.11
    discovery: ami-ee6a718a # CentOS Linux 7 x86_64 HVM EBS
    windc:     ami-8bd232ec # Windows_Server-2016-English-Full-Base-2018.04.11
    wsus:      ami-8bd232ec # Windows_Server-2016-English-Full-Base-2018.04.11
  eu-west-3: # Paris
    pm:        ami-036b19be76e42feb6 # tse-master-vmware-2018.1.0-v0.0.9.ova
    centos:    ami-bfff49c2 # CentOS Linux 7 x86_64 HVM EBS
    windows:   ami-b3fb4ace # Windows_Server-2016-English-Full-Base-2018.04.11
    discovery: ami-bfff49c2 # CentOS Linux 7 x86_64 HVM EBS
    windc:     ami-b3fb4ace # Windows_Server-2016-English-Full-Base-2018.04.11
    wsus:      ami-b3fb4ace # Windows_Server-2016-English-Full-Base-2018.04.11
  eu-central-1: # Frankfurt
    pm: ami-86761be9
  ap-southeast-2: # Sydney
    pm: ami-a6995fc4
  ap-southeast-1: # Singapore
    pm: ami-3b93db47
